plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("dagger.hilt.android.plugin")
    id("kotlin-kapt")
    id("org.jlleitschuh.gradle.ktlint") version "11.0.0"
}

ktlint {
    android = true
    ignoreFailures = false
    disabledRules = ["final-newline", "no-wildcard-imports"]
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

android {
    namespace 'com.malbolge.pokedex'
    compileSdk 33

    defaultConfig {
        applicationId "com.malbolge.pokedex"
        minSdk 33
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            buildConfigField "Boolean", "IS_PREVIEW", "false"
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            debuggable false
            manifestPlaceholders = [useSdk: true]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            debuggable true
            pseudoLocalesEnabled true
            manifestPlaceholders = [useSdk: true]
            buildConfigField "Boolean", "IS_PREVIEW", "true"

            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // Coil
    implementation("io.coil-kt:coil:2.3.0")
    implementation("io.coil-kt:coil-compose:2.3.0")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // gson e json converter
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0"

    // Material Icons
    implementation "androidx.compose.material:material-icons-core:1.3.1"
    implementation "androidx.compose.material:material-icons-extended:1.3.1"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // A library which provides a way to use Android drawables as Jetpack Compose Painters.
    implementation "com.google.accompanist:accompanist-drawablepainter:0.30.0"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.5.3"

    implementation("androidx.palette:palette:1.0.0")
}

kapt {
    correctErrorTypes true
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")
